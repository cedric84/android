name: build & check the application
on:
  push:
    branches:
      - master
jobs:
  ubuntu-build:
    runs-on: ubuntu-latest
    env:
      #---Android API #0---#
      MY_ANDROID_AVD_NAME0:      ${{ 'armv7a-api16' }}
      MY_ANDROID_SYSTEM_IMAGE0:  ${{ 'system-images;android-16;default;armeabi-v7a' }}
      MY_ANDROID_TRIPLET0:       ${{ 'armv7a-linux-androideabi16' }}
      MY_ANDROID_EMULATOR_PORT0: ${{ '5554' }}
      MY_ANDROID_DEST_PATH0:     ${{ '/data/local' }}
      #---Android API #1---#
      MY_ANDROID_AVD_NAME1:      ${{ 'armv7a-api24' }}
      MY_ANDROID_SYSTEM_IMAGE1:  ${{ 'system-images;android-24;default;armeabi-v7a' }}
      MY_ANDROID_TRIPLET1:       ${{ 'armv7a-linux-androideabi24' }}
      MY_ANDROID_EMULATOR_PORT1: ${{ '5556' }}
      MY_ANDROID_DEST_PATH1:     ${{ '/data/local' }}
      #---Android API generic---#
      MY_ANDROID_INDICES:        ${{ '0' }}
      MY_ANDROID_ENABLED:        ${{ !false }}
    steps:
      #---Checkout current repository---#
      - name: checkout
        uses: actions/checkout@v2

      #---Prepare for Android---#
      - name: install Android system images
        if: ${{ false != fromJSON(env.MY_ANDROID_ENABLED) }}
        run: |
          for idx in ${MY_ANDROID_INDICES}
          do
            MY_ANDROID_SYSTEM_IMAGE=MY_ANDROID_SYSTEM_IMAGE${idx}
            echo "::group::${!MY_ANDROID_SYSTEM_IMAGE}"
            ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager "${!MY_ANDROID_SYSTEM_IMAGE}"
            echo "::endgroup::"
          done
          unset MY_ANDROID_SYSTEM_IMAGE
      - name: create & start Android virtual devices
        if: ${{ false != fromJSON(env.MY_ANDROID_ENABLED) }}
        run: |
          for idx in ${MY_ANDROID_INDICES}
          do
            #---Definitions---#
            MY_ANDROID_AVD_NAME=MY_ANDROID_AVD_NAME${idx}
            MY_ANDROID_SYSTEM_IMAGE=MY_ANDROID_SYSTEM_IMAGE${idx}
            MY_ANDROID_EMULATOR_PORT=MY_ANDROID_EMULATOR_PORT${idx}
            MY_ANDROID_ADB="${ANDROID_HOME}/platform-tools/adb -s emulator-${!MY_ANDROID_EMULATOR_PORT}"
            #---Log---#
            echo "::group::${!MY_ANDROID_AVD_NAME}"
            #---Create---#
            echo -ne '\n' | ${ANDROID_HOME}/cmdline-tools/latest/bin/avdmanager -s create avd -n "${!MY_ANDROID_AVD_NAME}" -k "${!MY_ANDROID_SYSTEM_IMAGE}"
            #---Start---#
            ${ANDROID_HOME}/emulator/emulator -avd ${!MY_ANDROID_AVD_NAME} -port ${!MY_ANDROID_EMULATOR_PORT} -no-window -no-audio -no-snapshot &
            #---Wait for the emulator to be online---#
            ${MY_ANDROID_ADB} wait-for-device
            #---Restart as root---
            ${MY_ANDROID_ADB} root
            #---Log---#
            echo "::endgroup::"
          done
          unset MY_ANDROID_AVD_NAME MY_ANDROID_SYSTEM_IMAGE MY_ANDROID_EMULATOR_PORT MY_ANDROID_ADB

      #---Build---#
      - name: build
        if: ${{ false != fromJSON(env.MY_ANDROID_ENABLED) }}
        run: |
          for idx in ${MY_ANDROID_INDICES}
          do
            MY_ANDROID_TRIPLET=MY_ANDROID_TRIPLET${idx}
            MY_CC=$(find ${ANDROID_NDK_LATEST_HOME} -name ${!MY_ANDROID_TRIPLET}-clang)
            ${MY_CC} -Wall -Werror -o./${!MY_ANDROID_TRIPLET}-app ./main.c
          done
          unset MY_ANDROID_TRIPLET MY_CC

      #---Run---#
      - name: run
        if: ${{ false != fromJSON(env.MY_ANDROID_ENABLED) }}
        run: |
          for idx in ${MY_ANDROID_INDICES}
          do
            #---Definitions---#
            MY_ANDROID_TRIPLET=MY_ANDROID_TRIPLET${idx}
            MY_ANDROID_EMULATOR_PORT=MY_ANDROID_EMULATOR_PORT${idx}
            MY_ANDROID_DEST_PATH=MY_ANDROID_DEST_PATH${idx}
            MY_ANDROID_ADB="${ANDROID_HOME}/platform-tools/adb -s emulator-${!MY_ANDROID_EMULATOR_PORT}"
            #---Log---#
            echo "::group::${!MY_ANDROID_TRIPLET}"
            #---Wait for the emulator to be online---#
            ${MY_ANDROID_ADB} wait-for-device
            #---Wait for the emulator to be ready---#
            ${MY_ANDROID_ADB} shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
            #---Copy files---
            ${MY_ANDROID_ADB} push ./${!MY_ANDROID_TRIPLET}-app ${!MY_ANDROID_DEST_PATH}
            #---Run---#
#            ${MY_ANDROID_ADB} shell '${!MY_ANDROID_DEST_PATH}/${!MY_ANDROID_TRIPLET}-app'
            ${MY_ANDROID_ADB} shell '${!MY_ANDROID_DEST_PATH}/${!MY_ANDROID_TRIPLET}-app; if [ $? -ne 0 ]; then exit 1; fi'
            if [ $? -ne 0 ]; then exit 1; fi
            #---Log---#
            echo "::endgroup::"
          done
          unset MY_ANDROID_TRIPLET MY_ANDROID_EMULATOR_PORT MY_ANDROID_DEST_PATH MY_ANDROID_ADB

